---

const { isOpen=false } = Astro.props;

const bgColor = isOpen ? "var(--light-gray)" : "var(--dark-gray)";
const top = isOpen ? "12px" : "0px";
const bottom = isOpen ? "12px" : "0%";

---

<style define:vars={{ bgColor, top, bottom }} lang="scss">
	@use '../styles/_breakpoints.scss' as device;

	:global(.illustration-project){
		button.hamburger{
			visibility: hidden;
			display: none;
		}
	}

	button.hamburger{
		position: relative;
		z-index: 10;
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		-webkit-box-orient: vertical;
		-webkit-box-direction: normal;
		-ms-flex-direction: column;
				flex-direction: column;
		height:-webkit-fit-content;
		height:-moz-fit-content;
		height:fit-content;
		gap: 6px;
		background:none;
		border:none;
		padding:0;
		cursor: pointer;

		span{
			display: block;
			width:37px;
			height:6px;
			border-radius: 3px;
			-webkit-transition:top .2s ease,
						bottom .2s ease,
						background-color .2s ease;
			-o-transition:top .2s ease,
						bottom .2s ease,
						background-color .2s ease;
			transition:top .2s ease,
						bottom .2s ease,
						background-color .2s ease;

			background-color:var(--dark-gray);
			background-color:var(--bgColor);


			&:nth-of-type(1){
				position:relative;
				top:var(--top);

				&.expanded{
					top:12px;
				}
			}

			&:nth-of-type(3){
				position:relative;
				bottom:var(--bottom);

				&.expanded{
					bottom:12px;
				}
			}
		} /* span */

		&.expanded{
			span{
				background-color: var(--light-gray);
			}
		}

		@media only screen and (min-width: device.$laptop) {
			display: none;
		}
	}
</style>

<button class="hamburger">
    <span></span>
	<span></span>
	<span></span>
</button>

<script>
	import '../scripts/menu.js';
</script>