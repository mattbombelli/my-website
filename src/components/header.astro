---

import '../styles/global.scss';
import logo from '../assets/logo.gif';

let wavyLine = 'url(/wavy-line.svg)';
let wavyLineWhite = 'url(/wavy-line-white.svg)';
import line from '../assets/wavy-line.svg';
import lineWhite from '../assets/wavy-line-white.svg';
wavyLine = `url(${line.src})`;
wavyLineWhite = `url(${lineWhite.src})`;

import MenuItem from './header-menu-item.astro';
import Hamburger from './hamburger.astro';

const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1);

---

<style lang="scss" define:vars={{
    wavyLine,
    wavyLineWhite
    }}>
    @use '../styles/_breakpoints.scss' as device;

    .mobile-navbar{
        opacity: 0;
        position: absolute;
        z-index: 9;
        width: 100vw;
        height: 100dvh;
        top:0;
        left: 0;
        background:linear-gradient(to top, var(--celeste) 92%, var(--polynesian));
        -webkit-box-align: end;
        -ms-flex-align: end;
        align-items: flex-end;
        padding:20px;
        display:-webkit-box;
        display:-ms-flexbox;
        -webkit-transform:translate(-100%);
        -ms-transform:translate(-100%);
        transform:translate(-100%);
        display: flex;
        transition: transform .2s ease;
        transition: transform .2s ease, -webkit-transform .2s ease;
        -webkit-transition: -webkit-transform .2s ease;
        transition: -webkit-transform .2s ease;
        -o-transition: transform .2s ease;
        
        &.expanded{
            -webkit-transform:translate(0);
            -ms-transform:translate(0);
            transform:translate(0);
        }

        ul{
            list-style-type: none;
            padding:0;
            margin:0;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-orient: vertical;
            -webkit-box-direction: normal;
                -ms-flex-direction: column;
                    flex-direction: column;
            gap:10px;

            :global(a.nav-link){
                border-bottom:none;
                color:var(--light-gray);
                border-bottom-color:var(--light-gray);
            }
        } /* ul */

        @media only screen and (min-width: device.$tablet) {
            padding:65px 100px;

            ul{
                gap:55px;

                :global(a.nav-link){
                    border-bottom:17px solid var(--light-gray);
                    &:hover::after{
                        background-image:var(--wavyLineWhite);
                    }
                }
            } /* ul */
        }

        @media only screen and (min-width: device.$laptop) {
            -webkit-transform:translate(-100%);
            -ms-transform:translate(-100%);
            transform:translate(-100%);
            transform:translate(-100%);
            display:none;
        }
    }

    section.desktop-navbar{
        ul{
            list-style-type: none;
            padding:0;
            margin:0;
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
            -webkit-box-orient: horizontal;
            -webkit-box-direction: normal;
                -ms-flex-direction: row;
                    flex-direction: row;
            gap:30px;

            // li{
            //     position: relative;
            //     display: flex;
            //     flex-direction: column;
            // }

            // :global(.wavyline){
            //     // position: absolute;
            //     width: inherit;

            //     :global(.wave){
            //         stroke:red;
            //         stroke-width: 1px;
            //         stroke-linecap: square;
            //         fill:none;
            //         transform: translateX(0px);
            //     }
            // }

            li a.nav-link{
                font-size:var(--h5);
                position:relative;
                border-bottom-width:7px;
                // &:after{
                //     background-image: unset;
                // }
                &:hover{
                    border-bottom:none;
                }
                &:hover::after{
                    background-image:var(--wavyLine);
                    z-index: 1;
                }
            } /* li a */
        } /* ul */

	    display:none;

        @media only screen and (min-width: device.$laptop) {
            display: -webkit-box;
            display: -ms-flexbox;
            display: flex;
        }
    }

    img.logo{
        width:65px;
        height:100%;
        aspect-ratio: 1/1;

        @media only screen and (min-width: device.$laptop) {
            width:85px;
        }
    }
</style>

<section class="mobile-navbar" slot="mobile-navbar">
    <nav>
        <ul>
            <MenuItem link="/" text="Home" />
            <MenuItem link="/illustration" text="Illustration" />
            <MenuItem link="/about" text="About" />
        </ul>
    </nav>
</section>
<section class="site-header">
    <div class="site-header-wrapper">
        <a href="/" class="logo">
            <img src={logo.src} alt="Mattia Bombelli" class="logo" loading="eager"/>
        </a>
        <Hamburger />
        
        <section class="desktop-navbar">
            <nav>
                <ul>
                    <li class="desktop-link"><a href="/illustration" class=`nav-link ${currentPath === "illustration" ? "active" : ""}`>Illustration</a></li>
                    <li class="desktop-link"><a href="/about" class=`nav-link ${currentPath === "about" ? "active" : ""}`>About</a></li>
                </ul>
            </nav>
        </section>
    </div>
    <!-- <div class="sine-wave-container">
        <svg width="200" height="200" class="sine-wave">
             todo:
            - Generate dynamically a path containing multiple Cs that covers twice the width of the svg
            - Initially set control points all on the same line horizontally (so the curve will look like a straight line)
            - When menu item gets hovered, control points move to their respective final places, creating a smooth animation.
            -->
            <!-- <path class="wave" 
                d=" M   0 100
                    C   100 0
                        100 200
                        200 100
                    C   300 0
                        300 200
                        400 100
                "
            />
        </svg> -->
    </div>
</section>

<script>
    document.addEventListener(
        "astro:page-load",
        () => {

            // let links = document.getElementsByClassName("desktop-link");

            // for (let link of links){
            //     let svg = document.createElementNS('http://www.w3.org/2000/svg',"svg");
            //     svg.classList.add("wavyline");
            //     svg.setAttribute('width', '20px');
            //     svg.setAttribute('height', '20px');

            //     let sine = document.createElementNS('http://www.w3.org/2000/svg',"path");
            //     sine.classList.add("wave");
            //     sine.setAttributeNS(null, "d", `
            //         M   0 10
            //         C   100 10
            //             100 10

            //             200 10
            //         C   300 0
            //             300 200
            //             400 100
            //     `);
            //     svg.appendChild(sine);
            //     link.appendChild(svg);
            // }
            
        },
        { once: false }
    );
</script>