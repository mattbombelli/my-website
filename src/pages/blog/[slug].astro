---

import { getCollection, render } from "astro:content";
import { Image } from "astro:assets";
import dayjs from "dayjs";

import Blog from '../../layouts/Blog.astro';

import '../../styles/global.scss';

export async function getStaticPaths() {
    const articles = await getCollection('blog');
    return articles.map(article => ({
        params: {
            id: article.id,
            slug: article.data.slug
        },
        props: { article },
    }));
}

export const prerender = true;

const { article } = Astro.props;
const { Content } = await render(article);

---

<style lang="scss">
    @use '../../styles/_breakpoints.scss' as device;

    :global(.blog-article-tag){
        display: inline-block;
        background-color: var(--dark-gray);
        padding: var(--space-8-xxxs) var(--space-12-xxs);
        color: var(--light-gray);
        border-radius:40px;

        &:hover{
            background-color:var(--celeste);
            color:var(--light-gray);
        }
    }

    .article-content{
        padding-bottom:var(--space-32-s);
        border-bottom: 2px solid var(--dark-gray);

        .article-metadata{
            display: flex;
            flex-direction: column;
            row-gap: var(--space-32-s);

            .article-cat-date{
                display: flex;
                justify-content: space-between;
                align-items: center;

                .blog-category{
                    display: inline-block;
                    font-size: var(--h6);
                    line-height: var(--line-height-h6);
                    width: fit-content;
                    border-radius: 24px;
                    margin:0;
                }
                .article-pub-date{
                    font-size: var(--p);
                    line-height: var(--line-height-p);
                }
            }

            
            .article-tags{
                display:flex;
                flex-wrap: wrap;
                gap:var(--space-20-xs);
                font-size: var(--p);
                line-height: var(--line-height-p);
            }

            .featured-image{
                max-width: calc(100% + (20px * 2));
                transform: translateX(-20px);
                height: auto;
            }

            .article-excerpt{
                margin:0;
            }
        } // article metadata

        :global(.article-body){

            // headings
            :global(:is(h1)){
                font-size: var(--h2);
                line-height: var(--line-height-h2);
            }

            :global(:is(h1,h2)){
                margin-top:var(--space-100-xxl);
                margin-bottom: var(--space-32-s);
            }

            :global(:is(h3,h4,h5,h6)){
                margin-top:var(--space-76-xl);
                margin-bottom: var(--space-32-s);
            }

            :global(:is(h5,h6)){
                margin-top: var(--space-60-l);
                margin-bottom: var(--space-20-xs);
            }

            // paragraphs
            :global(p){
                margin:var(--space-20-xs) 0;

                :global(a){
                    text-decoration: underline;
                    &:global(:hover){
                        color:var(--munsell);
                    }
                }
            }

            // images
            :global(img){
                max-width: calc(100% + (20px * 2));
                transform: translateX(-20px);
                height: auto;
            }
            :global(img + em){
                display: block;
                margin-top:var(--space-12-xxs);
                font-size: var(--p);
                line-height: var(--line-height-p);
            }
  
        } // article content
    } // article content

    .blog-header{
        display: flex;
        flex-direction: column;
        row-gap: var(--space-20-xs);
        margin-bottom:var(--space-76-xl);

        h1{
            text-transform: none;
        }

        h2{
            font-size: var(--h6);
            line-height: var(--line-height-h6);
            margin:0;

            a{
                color:var(--dark-gray);

                .back-arrow{
                    stroke: var(--dark-gray);
                    stroke-width: 2px;
                    stroke-linecap: round;
                    stroke-linejoin: round;
                }

                &:hover{
                    color:var(--celeste);
                    .back-arrow{
                        stroke:var(--celeste);
                    }
                }
            }
        }
    } //blog header, specific to article page

</style>

<Blog isArticle pageName={article.data.title}>

    <section class="blog-header" slot="header">
        <h1>{article.data.title}</h1>
        <h2>
            <a href="/blog/">
                <svg width="24" height="20" viewBox="0 0 24 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M23 10H1.91667M10.1667 1L1 10L10.1667 19" class="back-arrow"/>
                </svg>                
                Go Back
            </a>
            </h2>
    </section>

    <article class="article-content" slot="content">
        <section class="article-metadata">
            <div class="article-cat-date">
                <h3 class="blog-category">{article.data.category}</h3>
                <p class="article-pub-date">{dayjs(article.data.datePublished).format('MMM D, YYYY')}</p>
            </div>
            <div class="article-tags">
                {
                    article.data.tags.map((tag) => (
                        <a href={`/blog/tags/${tag}`} class="blog-article-tag">#{tag}</a>
                    ))
                }
            </div>
            {article.data.featuredImage &&
                    <Image
                        src={article.data.featuredImage}
                        alt={article.data.title}
                        class="featured-image"
                        loading="lazy"
                        widths={[article.data.featuredImage.width / 3, article.data.featuredImage.width / 2, article.data.featuredImage.width]}
                        sizes={`(max-width: 810px) ${article.data.featuredImage.width / 3}, (max-width: 1200px) ${article.data.featuredImage.width / 2},(max-width: 1440px) ${article.data.featuredImage.width}`}
                        decoding="async"
                        style={`background-color:white;`}
                    />
            }
            <p class="article-excerpt">{article.data.excerpt}</p>
        </section>
        <section class="article-body">
            <Content />
        </section>
    </article>

</Blog>